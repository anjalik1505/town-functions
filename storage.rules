rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Staging prefix rules - authenticated uploader has full CRUD access to their own files
    match /pending_uploads/{userId}/{fileName} {
      // Only the authenticated uploader may create, read, update, or delete
      allow create, read, update, delete: if request.auth != null
                                          && request.auth.uid == userId;
    }

    // Update files rules - only read access based on Firestore document's visibleTo array
    match /updates/{updateId}/{fileName} {
      // READ: allow if auth.uid ∈ visibleTo OR "friend:auth.uid" ∈ visibleTo
      allow read: if request.auth != null
                  && (
                       get(
                         /databases/$(database)/documents/updates/$(updateId)
                       ).data.visible_to.contains(request.auth.uid)
                       || get(
                            /databases/$(database)/documents/updates/$(updateId)
                         ).data.visible_to.contains('friend:' + request.auth.uid)
                     );
    }
  }
} 